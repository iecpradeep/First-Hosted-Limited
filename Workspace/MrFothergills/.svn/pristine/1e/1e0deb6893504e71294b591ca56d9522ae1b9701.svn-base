/**********************************************************************************************************
 * Name:		caseEmailsUE.js
 * 
 * Script Type:	User Event
 * 
 * Version:		1.0.0 - 14/06/2013 - Initial release - SB
 *
 * Author:		S.Boot FHL
 * 
 * Purpose:		Find correct customer submitting the Case
 * 				Have some sort of intelligence to automatically categorise Cases
 * 
 * Script: 		
 * Deploy: 		
 * 
 * Libraries:	Library.js
 *  	
 **********************************************************************************************************/

/**
 * Match up the customer submitting the Case
 * @param type
 */
function beforeSubmit(type)
{

	var customerId = 0;
	var filters = new Array();
	var columns = new Array();
	var searchResults = null;
	
	if (type == 'create')
	{
		// Search for Customer where cust:brand = case:brand AND cust:email = case:email
		var caseCompany = nlapiGetFieldText('company');
		
		if (caseCompany == '1 Anonymous Customer')
		{
			var caseEmail = nlapiGetFieldValue('email');
			var caseBrand = nlapiGetFieldValue('custevent_mrf_campaign_brand');

			// If brand not already set by form
			// Create/Update is being done via email
			if (!caseBrand)
			{
				// Update existing case?
				updateExistingCase();
				
				// Get brand from inbound email mapping
				var inboundEmail = nlapiGetFieldValue('inboundemail');
				
				var filtersBrand = new Array();
				var columnsBrand = new Array();
				var searchResultsBrand = null;
				
				filtersBrand[0] = new nlobjSearchFilter('custrecord_email', null, 'is', inboundEmail);
				
				columnsBrand[0] = new nlobjSearchColumn('custrecord_brand_mapping');
				
				searchResultsBrand = nlapiSearchRecord('customrecord_support_brand_mapping', null, filtersBrand, columnsBrand);
				
				if (searchResultsBrand)
				{
					// Get the Brand
					caseBrand = searchResultsBrand[0].getValue('custrecord_brand_mapping');
					
					// Set it on the case
					nlapiSetFieldValue('custevent_mrf_campaign_brand', caseBrand);
				}
			}
			
			// Find customer
			if (caseEmail && caseBrand)
			{
				filters[0] = new nlobjSearchFilter('email', null, 'is', caseEmail);
				filters[1] = new nlobjSearchFilter('custentity_mrf_cust_brand', null, 'anyOf', caseBrand);
				
				searchResults = nlapiSearchRecord('customer', null, filters, columns);
				
				if (searchResults)
				{
					if (searchResults.length == 1)
					{
						customerId = searchResults[0].getId();
						
						// Set Company field to the customer ID
						nlapiSetFieldValue('company', customerId);
					}
				}
			}
		}
	}
}

/**
 * If the incoming message has a ref, use it to update existing case
 */
function updateExistingCase()
{
	// Update existing case
	var incomingMessage = nlapiGetFieldValue('incomingmessage');
	var caseIntID = '';
	
	// Parse internal ID out of message body
	var caseRef = incomingMessage.match(/\[#\d+-\d+\]/g);
	if (caseRef)
	{
		caseRef = caseRef[0];
		
		caseIntID = caseRef.match(/-\d+/);
		if (caseIntID)
		{
			caseIntID = caseIntID[0];
			caseIntID = caseIntID.replace('-', '');
			
			if (caseIntID)
			{
				// Load existing case
				var updateCase = nlapiLoadRecord('supportcase', caseIntID);
				
				// Set message
				updateCase.setFieldValue('outgoingmessage', incomingMessage);
				
				// Submit existing case
				nlapiSubmitRecord(updateCase);
				
				// Throw an error to abort new case creation
				throw nlapiCreateError(ERR_CODE.NO_ERR_ABORT_SUBMIT.Code,
				        ERR_CODE.NO_ERR_ABORT_SUBMIT.Msg, true);
			}
		}
	}
}

var ERR_CODE =
{
    NO_ERR_ABORT_SUBMIT : {
        Code:'NO_ERROR_ABOUT_SUBMIT', 
        Msg:'Intentionaly thrown exception to abort record submit'}
};
